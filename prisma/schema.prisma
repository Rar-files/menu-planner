generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model MealEvent {
  id   Int    @id @default(autoincrement())
  slug String @unique

  type MealType
  date DateTime

  meal   Meal @relation(fields: [mealId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  mealId Int

  team   Team @relation(fields: [teamId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  teamId Int
}

model Meal {
  id   Int    @id @default(autoincrement())
  slug String @unique

  name        String
  description String

  ingredients Ingredient[]
  mealEvents  MealEvent[]
}

model Product {
  id   Int    @id @default(autoincrement())
  slug String @unique

  name         String
  unit         Unit
  pricePerUnit Float

  ingredients Ingredient[]
}

model Ingredient {
  id Int @id @default(autoincrement())

  product   Product @relation(fields: [productId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  productId Int

  meal   Meal @relation(fields: [mealId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  mealId Int

  quantity Int
}

enum MealType {
  breakfast
  brunch
  elevenses
  lunch
  tea
  supper
  dinner
}

enum Unit {
  kg
  apiece
  ml
}

model Team {
  id            Int            @id @default(autoincrement())
  name          String         @unique
  slug          String         @unique
  viewMealTypes TeamMealType[]

  mealEvents MealEvent[]
  users      TeamUser[]
}

model TeamMealType {
  mealType MealType

  team   Team @relation(fields: [teamId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  teamId Int

  @@id(name: "id", [teamId, mealType])
}

model TeamUser {
  id Int @id @default(autoincrement())

  team   Team @relation(fields: [teamId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  teamId Int

  user   User   @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  userId String

  teamRole TeamRole @default(consumer)
}

enum TeamRole {
  consumer
  admin
  owner
}

model User {
  id    String @unique
  role  Role   @default(consumer)
  name  String
  email String
  image String

  teams TeamUser[]
}

enum Role {
  consumer
  cook
  chef
  admin
}
